{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.png","path":"medias/avatar.png","modified":0,"renderable":1},{"_id":"source/images/2023/gitlab_bigcodes/directory_file.png","path":"images/2023/gitlab_bigcodes/directory_file.png","modified":0,"renderable":0},{"_id":"source/images/2023/gitlab_bigcodes/directory_image.png","path":"images/2023/gitlab_bigcodes/directory_image.png","modified":0,"renderable":0},{"_id":"source/images/2023/gitlab_bigcodes/git_compress.png","path":"images/2023/gitlab_bigcodes/git_compress.png","modified":0,"renderable":0},{"_id":"source/images/2023/gitlab_bigcodes/git_xpack.png","path":"images/2023/gitlab_bigcodes/git_xpack.png","modified":0,"renderable":0},{"_id":"source/images/2023/gitlab_bigcodes/log_for_bfg.png","path":"images/2023/gitlab_bigcodes/log_for_bfg.png","modified":0,"renderable":0},{"_id":"source/images/2023/gitlab_bigcodes/gitcode_compare.png","path":"images/2023/gitlab_bigcodes/gitcode_compare.png","modified":0,"renderable":0},{"_id":"source/images/2023/npm_link_vuex_watch/link.png","path":"images/2023/npm_link_vuex_watch/link.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404/index.md","hash":"e37277f4a6f686fbd241cf890089b5eca21a6a31","modified":1680009227278},{"_id":"source/_data/friends.json","hash":"9d4f6d212ead154d47931d5536630b24dbef8c7f","modified":1680190616579},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1679651638092},{"_id":"source/about/index.md","hash":"4316fbfcf30e6050e6d5bada500151cb8cef45a2","modified":1680009006228},{"_id":"source/contact/index.md","hash":"d38360d9920249ed5a4c56168e5e23f00ccd3412","modified":1680009050427},{"_id":"source/.DS_Store","hash":"52728eb4797b3b15fbf93006ca11493210bb5fcf","modified":1679895047603},{"_id":"source/_posts/gitlab-上和项目大仓库说再见.md","hash":"0aaa53a60fa9c88a45308dbf90de3ed7fa2886bd","modified":1679894551540},{"_id":"source/tags/index.md","hash":"49103f24965edb299738de44f46d801bf7ebad23","modified":1680008956223},{"_id":"source/friends/index.md","hash":"643259616377126485b1ef91e7d42e668ce900a9","modified":1680009081832},{"_id":"source/categories/index.md","hash":"8377ade4df03538f1aaeceeda602653ae3cd815a","modified":1680008956218},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1679980516278},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1679980516278},{"_id":"themes/hexo-theme-matery/.DS_Store","hash":"5cdfd4f9c39957e8fd3ff0a6bdf148851dde30e6","modified":1680012918542},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"9c35a786d3dffc708f75d8a68b85b64dffa35572","modified":1679980516279},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"2ed57824573d7bed71e56023ed92500734a8886d","modified":1679980516279},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"a811cec0b6d91f405e8c7386a57039cd8c3448bb","modified":1679980516279},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1679980516279},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"b64f4a8963e1e7ef4f4e574f24bfb1b05a041ab3","modified":1680190186467},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1679980516279},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1679980516279},{"_id":"themes/hexo-theme-matery/layout/.DS_Store","hash":"cc9874dbebadbeffd75b8654b2eae978de87693f","modified":1679981169358},{"_id":"themes/hexo-theme-matery/README.md","hash":"d64f79581eaf7b2ce8205209de8b01311db41832","modified":1679980516278},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"534511d9f38f281b531e24c19d9c1526cc7e5e27","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"94c2fee85418370ca8f7d54050c852267e924eb7","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"12350c0d366141b5c27792bb414d4adc303b0a9f","modified":1679980516279},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1679980516279},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1679980516280},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"2bcc302ad5bf0e52f00b62bea2cba79d33e81aee","modified":1679984098000},{"_id":"themes/hexo-theme-matery/source/.DS_Store","hash":"aa2bff5b5abb9b95c976208fe97d9e8d40d30b94","modified":1679981169362},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1679980516279},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"4765267aafe2871a2fdaeccd1598890219bd7d71","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"086a06863a0f88888707409936aa06a09ff50e3a","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"e8958bc066b3c2fcd4152604cc12f30020106848","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f5c00f21af281a09dc7de89e82a3b442903451a7","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1679980516280},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"e8b44268b59add61af44b7338527523d10d9d742","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"0953217f4e19a51dfc5a0ffc7d066406df18060b","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"6261f8191c3c1159f63ec7f9293bb93f7d2a3dbb","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"70fccaea75ce48364222c4e5de0496e556b01cb1","modified":1679980516281},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"236668e72b01db91f5bf29eec4c79e34e2746d98","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1679980516282},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"2ac48566bb806336f1e5bc5c66fc816a580d63c3","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"2658cb73ef984a30b248351d7858ee15596a6e7a","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"bb25a6fa51eb5ebfba687b2cbadff6c7a4b4bfef","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1679980516283},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1679980516283},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"ab02fb2da648f4f7afa0c2381aaca334bdeb54e6","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1679980516284},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"84b0122b92342834540f69b19600cb54c50ab69e","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1679980516284},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1679980516284},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1679980516285},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1679980516284},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"e4a478c91cd6750a9f18b65b914ff0b316fb08b3","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"413ad9731332810823b57dd0f4c0284e3af2af63","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1679980516286},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1679980516283},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1679980516286},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/libs/.DS_Store","hash":"e90eb448c7eafb71f99f74ad39fe652875ee1988","modified":1679981169364},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1679980516325},{"_id":"themes/hexo-theme-matery/source/medias/.DS_Store","hash":"5cfd93c7b6d037cd640e5e56fa235ac07178f166","modified":1679981169361},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"fd2dfb6c0ad82d348e2db4fff6a0e9aaa2cc5701","modified":1680022612372},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1679980516328},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1679980516338},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1679980516289},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1679980516288},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1679980516295},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1679980516295},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1679980516298},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1679980516298},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1679980516301},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1679980516301},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1679980516301},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1679980516301},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1679980516303},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1679980516313},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1679980516317},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1679980516316},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1679980516318},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1679980516321},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1679980516321},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1679980516322},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1679980516323},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1679980516328},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1679980516328},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1679980516328},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1679980516328},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1679980516329},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1679980516330},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1679980516331},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1679980516331},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1679980516332},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1679980516332},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1679980516333},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1679980516336},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1679980516337},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1679980516337},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1679980516333},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1679980516337},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1679980516341},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1679980516342},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1679980516291},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1679980516291},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1679980516293},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1679980516294},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1679980516303},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1679980516303},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1679980516303},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1679980516321},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1679980516321},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1679980516298},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1679980516301},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1679980516302},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"e803a04a34fdec380867e6573b4550ba403d33ed","modified":1680023608529},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"ca13b9c5814bfd9f6c0782983f75e9b7d0db04eb","modified":1680024537009},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"1fc0f79a626c445d1ec6fab65f03644f3a0fa987","modified":1680024328337},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1679980516329},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1679980516329},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1679980516330},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1679980516330},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1679980516330},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1679980516331},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1679980516331},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1679980516332},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1679980516331},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1679980516336},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1679980516337},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1679980516338},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1679980516291},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1679980516289},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1679980516329},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1679980516295},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1679980516304},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1679980516304},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1679980516323},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1679980516325},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"4596b0866c939c37d7bc540524d93d5498bb9ce7","modified":1680023989233},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"81de79816b4335fcb80583b9b64ebb444e36565e","modified":1680025340204},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"dfae57227c72cf46c6d40084e9d0c511e3230ff6","modified":1680025622450},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1679980516340},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1679980516289},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1679980516293},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1679980516290},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1679980516287},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1679980516324},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"773df78363d46464bb0cb24845255b98062684a2","modified":1680025100383},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1679980516341},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1679980516293},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1679980516322},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1679980516320},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1679980516339},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1679980516298},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1679980516300},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1679980516316},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1679980516313},{"_id":"themes/hexo-theme-matery/source/medias/avatar.png","hash":"549bb25c14be2b8f5122243d83a67a3d2a4a4f8f","modified":1680026028231},{"_id":"source/images/2023/gitlab_bigcodes/directory_file.png","hash":"4430bfed3e41d9d483fc33e59324777527b4d8c9","modified":1680085491649},{"_id":"source/_posts/gitlab 上和项目大仓库说再见.md","hash":"da793d11d27ce208244316311ae12f7b0d02a8b3","modified":1680184393656},{"_id":"source/images/2023/gitlab_bigcodes/git_xpack.png","hash":"26997bb680da23b4c09f461e75ab253b29867bcd","modified":1680086061312},{"_id":"source/images/2023/gitlab_bigcodes/git_compress.png","hash":"d990c9e82a866c04faf8ac73bc776a62f9414f4b","modified":1680085554339},{"_id":"source/images/2023/gitlab_bigcodes/directory_image.png","hash":"a1cd61c65c0d06f8519b6a65912f51f705d9984b","modified":1680067070748},{"_id":"source/images/2023/gitlab_bigcodes/log_for_bfg.png","hash":"bbd05a1c0abde675e90603f8cc63888779a8309d","modified":1680086132793},{"_id":"source/images/2023/gitlab_bigcodes/gitcode_compare.png","hash":"9e1403b83cc05af4bafb75001354d10c6a59ebb5","modified":1680085581945},{"_id":"source/_posts/npm-link-VUEX-watch-怎么不生效.md","hash":"9e4a5f8566399d58a091c6b997e58093457b100e","modified":1680435062213},{"_id":"source/images/2023/npm_link_vuex_watch/link.png","hash":"f1b259722015c10b5a76dd30d9da21a80abf50c4","modified":1680434615106}],"Category":[{"name":"tools","_id":"clfsi5qcx0003g9660tk982mp"},{"name":"npm","_id":"clfzbkh910001jn669p08ds62"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://code-thinking-1253855093.file.myqcloud.com/pics/20211111115823.png","name":"程序员Carl","introduction":"认准代码随想录，学习算法不迷路","url":"https://www.programmercarl.com/","title":"前去学习"}]}],"Page":[{"title":"404","date":"2023-03-28T13:12:54.000Z","type":"404","layout":"404","desciption":"Oops~我崩溃了！找不到你想要的页面:(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2023-03-28 21:12:54\ntype: \"404\"\nlayout: \"404\"\ndesciption: \"Oops~我崩溃了！找不到你想要的页面:(\"\n---\n","updated":"2023-03-28T13:13:47.278Z","path":"404/index.html","comments":1,"_id":"clfsi5qcs0000g9669yld0ldi","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2023-03-28T13:09:43.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-03-28 21:09:43\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2023-03-28T13:10:06.228Z","path":"about/index.html","comments":1,"_id":"clfsi5qcw0002g9669c484gu7","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2023-03-28T13:10:24.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2023-03-28 21:10:24\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2023-03-28T13:10:50.427Z","path":"contact/index.html","comments":1,"_id":"clfsi5qcy0005g966946nfqo9","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2023-03-24T10:10:54.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-03-24 18:10:54\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-03-28T13:09:16.218Z","path":"categories/index.html","comments":1,"_id":"clfsi5qcy0006g9668jp77yn5","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2023-03-28T13:11:03.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2023-03-28 21:11:03\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2023-03-28T13:11:21.832Z","path":"friends/index.html","comments":1,"_id":"clfsi5qcz0007g9660oyrc3y3","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2023-03-27T05:08:46.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-03-27 13:08:46\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2023-03-28T13:09:16.223Z","path":"tags/index.html","comments":1,"_id":"clfsi5qcz0009g966818ie4bg","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"gitlab 上和项目大仓库说再见","date":"2023-03-27T05:00:03.000Z","_content":"## :cat: 背景\n\n`git clone` 项目耗时很长。原因，网速慢或是代码仓库文件很大(n+ G)。本篇文章就讲述如何给 `gitlab` 代码仓库减负。\n\n### :dog: 基础知识\n\n项目在 gitlab 中显示的仓库大小 = 项目文件总大小 + `.git` （隐藏）目录下文件大小。请认真关注你项目目录文件大小（windows 可以用 [treesize free](https://www.jam-software.com/treesize_free) / [SpaceSniffer](http://www.uderzo.it/main_products/space_sniffer/download_alt.html) 工具，linux 可以用命令 `du -h –max-depth=1 *`，mac 命令 `du -h -d 1 *` ），一般 `.git` 目录下文件大小 >= 项目文件大小。意味着，项目整体下载空间占用 >= 2 * 项目文件大小。所以，如果项目中包含比较大的文件，例如视频，高清照片等，把 gitlab 当做了**共享备份存储空间**是项目文件大的罪魁祸手。所以，项目初期代码一定和需求文档做剥离，除非你的项目足够的小。\n\n### :fish: 拯救 git 仓库\n\n对于需求文档类项目而言，建议用 `git lfs` 做大文件管理（此处 `git lfs` 不做过多介绍，请点击[链接](https://git-lfs.github.com/)了解）。请多想想后面加入的需求人，给他们的加入减少一些绊脚石。\n\n> :bulb: 仅使用几次，过一个月之后基本不翻的东西、无需版本管理、内容超过 100 MB 的视频，请慎重放入 git 仓库\n\n### :whale: 分析 git 大仓库\n\n- windows 上使用 `TreeSize Free`  看看文件大小占比分布。发现，项目本身文件大小大约 900 MB ，`.git` 目录吃掉 2.6 GB。原因，其实上面基础知识算是解答了一部分，感兴趣的同学可以参考附件**git 原理**找答案。\n\n  ![](images/2023/gitlab_bigcodes/directory_image.png)\n\n- 使用 `git verify-pack`  命令运行  `git verify-pack -v .git/objects/pack/pack-f0fa1a09cd9ebf8874e4ecafa9e56be7816097de.idx|sort -k 3 -n| tail -10` ，查找出文件大小在前 10 的文件 hash 标识。注意，windows 上请使用 `git Bash Here ` 运行。\n\n  ![](images/2023/gitlab_bigcodes/git_xpack.png)\n\n- 使用命令 `git rev-list` 运行 `git rev-list --objects --all|grep  hashId ` 定位大文件路径。此处，处理文件大小超过 100 MB。\n\n  ![](images/2023/gitlab_bigcodes/directory_file.png)\n\n- 按照路径和 `git log` 查找提交人，确定文件是否存在，且是否需要存在。确定需要清理的为 `xxxx.asf` 和 `xxx.asf` 两个文件。已经删除的文件，却在日志里能搜索出来，原因是防止你执行 `git revert` 还原到删除前的 commitId 版本。所以，清理原则就是需要**明确**哪些文件要删除，没有机会还原的话，就删除吧。\n\n  > :bulb: 有重命名/移动目录需求，请使用 `git mv`  命令，而达到目录变更及命名功能。不要使用 `git mv` 和 `git add` 的方式，完成文件重命名或移动目录。这样会造成有删除的用不到的记录。\n\n## :dolphin: 如何清理\n> 在清理之前，建议所有人的分支都 push 到远端。否则，其他人的每次的 push 都会让你的清理都需要重新来一次。\n\n目前，主要有两种方法：\n\n- git 原生支持的 `filter-branch` 分支文件，命令 `git filter-branch --force --tree-filter 'rm -f path/to/big_file.mpg' HEAD` 。（不推荐。对于超多 commit 的项目，`filter-branch` 慢的怀疑人生，小编就是从 `git filter-branch` 放弃，转投 `BFG`）\n\n-  `BFG` 工具\n\n    - 执行命令 `git clone --mirror git-repository-url`  clone git 仓库\n\n    - 执行命令 `java -jar bfg.jar --massive-non-file-objects-sized-up-to 100M --delete-files '{xxx.asf,xxx.asf}' thunisoft-mvd.git`。\n\n      > `BFG` 对于需要清理的 history 会更改涉及文件的提交的 commit-id。具体老新 commit-id 的对应关系文件在 `thunisoft-mvd.git.bfg-report\\2020-07-17\\16-14-13\\object-id-map.old-new.txt` 中 \n      > 此时，`.git/objects` 下的  `pack/xxxxx.pack`  文件会被解压为  n 个 `git objects` 对象文件\n\n    ![](images/2023/gitlab_bigcodes/log_for_bfg.png)\n\n- 执行命令 `git reflog expire --expire=now --all && git gc --prune=now --aggressive` ，将 git object 对象压缩。而后，执行命令 `git push` 推送远端。\n\n  > 注意：推送之前解除仓库的 `Protected Branches` 的配置\n\n\n  ![](images/2023/gitlab_bigcodes/git_compress.png)\n\n\n- 请项目组所有成员放弃原本的本地项目仓库，重新 clone git 项目。因为，如果用原来的仓库你会发现本地 `.git` 会更大，因为除了 `git gc` 重新生成的 `pack` 文件之外，还有本地本身老的 `pack` 文件。\n\n**最终和派生项目对比，除 `.git` 目录外其他相同。**\n\n![](images/2023/gitlab_bigcodes/gitcode_compare.png)\n\n**为什么存在不到 1 KB 的文件？因为，本项目使用 `git lfs` 做了大文件管理，使用 `git lfs pull` 可以从远端拉下 1 KB 映射的原文件**\n**<font color=\"red\">清理完成，2.4 GB -> 1.1 GB 的转身</font>**\n\n## :lion: 特别说明\n\n- 项目使用 `git lfs` 管理大文件之后，使用 `BFG` 清理完对项目本身没有任何影响。照样，可以使用 `git lfs` 命令管理文件。\n- 真实项目在清理前，请先按照本文先 `clone` 出一份，熟悉一下清理流程，更有底气。\n\n## :horse: 附录\n\n- [git 原理-阮一峰](http://www.ruanyifeng.com/blog/2018/10/git-internals.html)\n- [git 原理](https://zhuanlan.zhihu.com/p/45510461)\n- [git 大文件清理-github](https://docs.github.com/cn/github/managing-large-files/removing-files-from-git-large-file-storage#removing-a-single-file)\n- [git 大文件清理-gitlab](http://gitlab.thunisoft.com/help/user/project/repository/reducing_the_repo_size_using_git.md)，目前不用上传 `object-id-map.old-new.txt` 文件，走 “开始清理” 这步骤\n- [git BFG](https://rtyley.github.io/bfg-repo-cleaner/)\n- [git 练习场](https://learngitbranching.js.org/?locale=zh_CN)\n- [git 学习文档](https://git-scm.com/book/zh/v2)\n","source":"_posts/gitlab 上和项目大仓库说再见.md","raw":"---\ntitle: gitlab 上和项目大仓库说再见\ndate: 2023-03-27 13:00:03\ncategories:\n- tools\ntags:\n- tools\n- gitlab\n- BFG\n---\n## :cat: 背景\n\n`git clone` 项目耗时很长。原因，网速慢或是代码仓库文件很大(n+ G)。本篇文章就讲述如何给 `gitlab` 代码仓库减负。\n\n### :dog: 基础知识\n\n项目在 gitlab 中显示的仓库大小 = 项目文件总大小 + `.git` （隐藏）目录下文件大小。请认真关注你项目目录文件大小（windows 可以用 [treesize free](https://www.jam-software.com/treesize_free) / [SpaceSniffer](http://www.uderzo.it/main_products/space_sniffer/download_alt.html) 工具，linux 可以用命令 `du -h –max-depth=1 *`，mac 命令 `du -h -d 1 *` ），一般 `.git` 目录下文件大小 >= 项目文件大小。意味着，项目整体下载空间占用 >= 2 * 项目文件大小。所以，如果项目中包含比较大的文件，例如视频，高清照片等，把 gitlab 当做了**共享备份存储空间**是项目文件大的罪魁祸手。所以，项目初期代码一定和需求文档做剥离，除非你的项目足够的小。\n\n### :fish: 拯救 git 仓库\n\n对于需求文档类项目而言，建议用 `git lfs` 做大文件管理（此处 `git lfs` 不做过多介绍，请点击[链接](https://git-lfs.github.com/)了解）。请多想想后面加入的需求人，给他们的加入减少一些绊脚石。\n\n> :bulb: 仅使用几次，过一个月之后基本不翻的东西、无需版本管理、内容超过 100 MB 的视频，请慎重放入 git 仓库\n\n### :whale: 分析 git 大仓库\n\n- windows 上使用 `TreeSize Free`  看看文件大小占比分布。发现，项目本身文件大小大约 900 MB ，`.git` 目录吃掉 2.6 GB。原因，其实上面基础知识算是解答了一部分，感兴趣的同学可以参考附件**git 原理**找答案。\n\n  ![](images/2023/gitlab_bigcodes/directory_image.png)\n\n- 使用 `git verify-pack`  命令运行  `git verify-pack -v .git/objects/pack/pack-f0fa1a09cd9ebf8874e4ecafa9e56be7816097de.idx|sort -k 3 -n| tail -10` ，查找出文件大小在前 10 的文件 hash 标识。注意，windows 上请使用 `git Bash Here ` 运行。\n\n  ![](images/2023/gitlab_bigcodes/git_xpack.png)\n\n- 使用命令 `git rev-list` 运行 `git rev-list --objects --all|grep  hashId ` 定位大文件路径。此处，处理文件大小超过 100 MB。\n\n  ![](images/2023/gitlab_bigcodes/directory_file.png)\n\n- 按照路径和 `git log` 查找提交人，确定文件是否存在，且是否需要存在。确定需要清理的为 `xxxx.asf` 和 `xxx.asf` 两个文件。已经删除的文件，却在日志里能搜索出来，原因是防止你执行 `git revert` 还原到删除前的 commitId 版本。所以，清理原则就是需要**明确**哪些文件要删除，没有机会还原的话，就删除吧。\n\n  > :bulb: 有重命名/移动目录需求，请使用 `git mv`  命令，而达到目录变更及命名功能。不要使用 `git mv` 和 `git add` 的方式，完成文件重命名或移动目录。这样会造成有删除的用不到的记录。\n\n## :dolphin: 如何清理\n> 在清理之前，建议所有人的分支都 push 到远端。否则，其他人的每次的 push 都会让你的清理都需要重新来一次。\n\n目前，主要有两种方法：\n\n- git 原生支持的 `filter-branch` 分支文件，命令 `git filter-branch --force --tree-filter 'rm -f path/to/big_file.mpg' HEAD` 。（不推荐。对于超多 commit 的项目，`filter-branch` 慢的怀疑人生，小编就是从 `git filter-branch` 放弃，转投 `BFG`）\n\n-  `BFG` 工具\n\n    - 执行命令 `git clone --mirror git-repository-url`  clone git 仓库\n\n    - 执行命令 `java -jar bfg.jar --massive-non-file-objects-sized-up-to 100M --delete-files '{xxx.asf,xxx.asf}' thunisoft-mvd.git`。\n\n      > `BFG` 对于需要清理的 history 会更改涉及文件的提交的 commit-id。具体老新 commit-id 的对应关系文件在 `thunisoft-mvd.git.bfg-report\\2020-07-17\\16-14-13\\object-id-map.old-new.txt` 中 \n      > 此时，`.git/objects` 下的  `pack/xxxxx.pack`  文件会被解压为  n 个 `git objects` 对象文件\n\n    ![](images/2023/gitlab_bigcodes/log_for_bfg.png)\n\n- 执行命令 `git reflog expire --expire=now --all && git gc --prune=now --aggressive` ，将 git object 对象压缩。而后，执行命令 `git push` 推送远端。\n\n  > 注意：推送之前解除仓库的 `Protected Branches` 的配置\n\n\n  ![](images/2023/gitlab_bigcodes/git_compress.png)\n\n\n- 请项目组所有成员放弃原本的本地项目仓库，重新 clone git 项目。因为，如果用原来的仓库你会发现本地 `.git` 会更大，因为除了 `git gc` 重新生成的 `pack` 文件之外，还有本地本身老的 `pack` 文件。\n\n**最终和派生项目对比，除 `.git` 目录外其他相同。**\n\n![](images/2023/gitlab_bigcodes/gitcode_compare.png)\n\n**为什么存在不到 1 KB 的文件？因为，本项目使用 `git lfs` 做了大文件管理，使用 `git lfs pull` 可以从远端拉下 1 KB 映射的原文件**\n**<font color=\"red\">清理完成，2.4 GB -> 1.1 GB 的转身</font>**\n\n## :lion: 特别说明\n\n- 项目使用 `git lfs` 管理大文件之后，使用 `BFG` 清理完对项目本身没有任何影响。照样，可以使用 `git lfs` 命令管理文件。\n- 真实项目在清理前，请先按照本文先 `clone` 出一份，熟悉一下清理流程，更有底气。\n\n## :horse: 附录\n\n- [git 原理-阮一峰](http://www.ruanyifeng.com/blog/2018/10/git-internals.html)\n- [git 原理](https://zhuanlan.zhihu.com/p/45510461)\n- [git 大文件清理-github](https://docs.github.com/cn/github/managing-large-files/removing-files-from-git-large-file-storage#removing-a-single-file)\n- [git 大文件清理-gitlab](http://gitlab.thunisoft.com/help/user/project/repository/reducing_the_repo_size_using_git.md)，目前不用上传 `object-id-map.old-new.txt` 文件，走 “开始清理” 这步骤\n- [git BFG](https://rtyley.github.io/bfg-repo-cleaner/)\n- [git 练习场](https://learngitbranching.js.org/?locale=zh_CN)\n- [git 学习文档](https://git-scm.com/book/zh/v2)\n","slug":"gitlab 上和项目大仓库说再见","published":1,"updated":"2023-03-30T13:53:13.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfzan0gs0000hv66745a8rfv","content":"<h2 id=\"cat-背景\"><a href=\"#cat-背景\" class=\"headerlink\" title=\":cat: 背景\"></a><span class=\"github-emoji\"><span>🐱</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 背景</h2><p><code>git clone</code> 项目耗时很长。原因，网速慢或是代码仓库文件很大(n+ G)。本篇文章就讲述如何给 <code>gitlab</code> 代码仓库减负。</p>\n<h3 id=\"dog-基础知识\"><a href=\"#dog-基础知识\" class=\"headerlink\" title=\":dog: 基础知识\"></a><span class=\"github-emoji\"><span>🐶</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 基础知识</h3><p>项目在 gitlab 中显示的仓库大小 = 项目文件总大小 + <code>.git</code> （隐藏）目录下文件大小。请认真关注你项目目录文件大小（windows 可以用 <a href=\"https://www.jam-software.com/treesize_free\">treesize free</a> / <a href=\"http://www.uderzo.it/main_products/space_sniffer/download_alt.html\">SpaceSniffer</a> 工具，linux 可以用命令 <code>du -h –max-depth=1 *</code>，mac 命令 <code>du -h -d 1 *</code> ），一般 <code>.git</code> 目录下文件大小 &gt;= 项目文件大小。意味着，项目整体下载空间占用 &gt;= 2 * 项目文件大小。所以，如果项目中包含比较大的文件，例如视频，高清照片等，把 gitlab 当做了<strong>共享备份存储空间</strong>是项目文件大的罪魁祸手。所以，项目初期代码一定和需求文档做剥离，除非你的项目足够的小。</p>\n<h3 id=\"fish-拯救-git-仓库\"><a href=\"#fish-拯救-git-仓库\" class=\"headerlink\" title=\":fish: 拯救 git 仓库\"></a><span class=\"github-emoji\"><span>🐟</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 拯救 git 仓库</h3><p>对于需求文档类项目而言，建议用 <code>git lfs</code> 做大文件管理（此处 <code>git lfs</code> 不做过多介绍，请点击<a href=\"https://git-lfs.github.com/\">链接</a>了解）。请多想想后面加入的需求人，给他们的加入减少一些绊脚石。</p>\n<blockquote>\n<p><span class=\"github-emoji\"><span>💡</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 仅使用几次，过一个月之后基本不翻的东西、无需版本管理、内容超过 100 MB 的视频，请慎重放入 git 仓库</p>\n</blockquote>\n<h3 id=\"whale-分析-git-大仓库\"><a href=\"#whale-分析-git-大仓库\" class=\"headerlink\" title=\":whale: 分析 git 大仓库\"></a><span class=\"github-emoji\"><span>🐳</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f433.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 分析 git 大仓库</h3><ul>\n<li><p>windows 上使用 <code>TreeSize Free</code>  看看文件大小占比分布。发现，项目本身文件大小大约 900 MB ，<code>.git</code> 目录吃掉 2.6 GB。原因，其实上面基础知识算是解答了一部分，感兴趣的同学可以参考附件<strong>git 原理</strong>找答案。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/directory_image.png\"></p>\n</li>\n<li><p>使用 <code>git verify-pack</code>  命令运行  <code>git verify-pack -v .git/objects/pack/pack-f0fa1a09cd9ebf8874e4ecafa9e56be7816097de.idx|sort -k 3 -n| tail -10</code> ，查找出文件大小在前 10 的文件 hash 标识。注意，windows 上请使用 <code>git Bash Here </code> 运行。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/git_xpack.png\"></p>\n</li>\n<li><p>使用命令 <code>git rev-list</code> 运行 <code>git rev-list --objects --all|grep  hashId </code> 定位大文件路径。此处，处理文件大小超过 100 MB。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/directory_file.png\"></p>\n</li>\n<li><p>按照路径和 <code>git log</code> 查找提交人，确定文件是否存在，且是否需要存在。确定需要清理的为 <code>xxxx.asf</code> 和 <code>xxx.asf</code> 两个文件。已经删除的文件，却在日志里能搜索出来，原因是防止你执行 <code>git revert</code> 还原到删除前的 commitId 版本。所以，清理原则就是需要<strong>明确</strong>哪些文件要删除，没有机会还原的话，就删除吧。</p>\n<blockquote>\n<p><span class=\"github-emoji\"><span>💡</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 有重命名/移动目录需求，请使用 <code>git mv</code>  命令，而达到目录变更及命名功能。不要使用 <code>git mv</code> 和 <code>git add</code> 的方式，完成文件重命名或移动目录。这样会造成有删除的用不到的记录。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"dolphin-如何清理\"><a href=\"#dolphin-如何清理\" class=\"headerlink\" title=\":dolphin: 如何清理\"></a><span class=\"github-emoji\"><span>🐬</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f42c.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 如何清理</h2><blockquote>\n<p>在清理之前，建议所有人的分支都 push 到远端。否则，其他人的每次的 push 都会让你的清理都需要重新来一次。</p>\n</blockquote>\n<p>目前，主要有两种方法：</p>\n<ul>\n<li><p>git 原生支持的 <code>filter-branch</code> 分支文件，命令 <code>git filter-branch --force --tree-filter 'rm -f path/to/big_file.mpg' HEAD</code> 。（不推荐。对于超多 commit 的项目，<code>filter-branch</code> 慢的怀疑人生，小编就是从 <code>git filter-branch</code> 放弃，转投 <code>BFG</code>）</p>\n</li>\n<li><p><code>BFG</code> 工具</p>\n<ul>\n<li><p>执行命令 <code>git clone --mirror git-repository-url</code>  clone git 仓库</p>\n</li>\n<li><p>执行命令 <code>java -jar bfg.jar --massive-non-file-objects-sized-up-to 100M --delete-files '{xxx.asf,xxx.asf}' thunisoft-mvd.git</code>。</p>\n<blockquote>\n<p><code>BFG</code> 对于需要清理的 history 会更改涉及文件的提交的 commit-id。具体老新 commit-id 的对应关系文件在 <code>thunisoft-mvd.git.bfg-report\\2020-07-17\\16-14-13\\object-id-map.old-new.txt</code> 中<br>此时，<code>.git/objects</code> 下的  <code>pack/xxxxx.pack</code>  文件会被解压为  n 个 <code>git objects</code> 对象文件</p>\n</blockquote>\n</li>\n</ul>\n<p>  <img src=\"/images/2023/gitlab_bigcodes/log_for_bfg.png\"></p>\n</li>\n<li><p>执行命令 <code>git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive</code> ，将 git object 对象压缩。而后，执行命令 <code>git push</code> 推送远端。</p>\n<blockquote>\n<p>注意：推送之前解除仓库的 <code>Protected Branches</code> 的配置</p>\n</blockquote>\n</li>\n</ul>\n<p>  <img src=\"/images/2023/gitlab_bigcodes/git_compress.png\"></p>\n<ul>\n<li>请项目组所有成员放弃原本的本地项目仓库，重新 clone git 项目。因为，如果用原来的仓库你会发现本地 <code>.git</code> 会更大，因为除了 <code>git gc</code> 重新生成的 <code>pack</code> 文件之外，还有本地本身老的 <code>pack</code> 文件。</li>\n</ul>\n<p><strong>最终和派生项目对比，除 <code>.git</code> 目录外其他相同。</strong></p>\n<p><img src=\"/images/2023/gitlab_bigcodes/gitcode_compare.png\"></p>\n<p><strong>为什么存在不到 1 KB 的文件？因为，本项目使用 <code>git lfs</code> 做了大文件管理，使用 <code>git lfs pull</code> 可以从远端拉下 1 KB 映射的原文件</strong><br><strong><font color=\"red\">清理完成，2.4 GB -&gt; 1.1 GB 的转身</font></strong></p>\n<h2 id=\"lion-特别说明\"><a href=\"#lion-特别说明\" class=\"headerlink\" title=\":lion: 特别说明\"></a><span class=\"github-emoji\"><span>🦁</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f981.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 特别说明</h2><ul>\n<li>项目使用 <code>git lfs</code> 管理大文件之后，使用 <code>BFG</code> 清理完对项目本身没有任何影响。照样，可以使用 <code>git lfs</code> 命令管理文件。</li>\n<li>真实项目在清理前，请先按照本文先 <code>clone</code> 出一份，熟悉一下清理流程，更有底气。</li>\n</ul>\n<h2 id=\"horse-附录\"><a href=\"#horse-附录\" class=\"headerlink\" title=\":horse: 附录\"></a><span class=\"github-emoji\"><span>🐴</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f434.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 附录</h2><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2018/10/git-internals.html\">git 原理-阮一峰</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/45510461\">git 原理</a></li>\n<li><a href=\"https://docs.github.com/cn/github/managing-large-files/removing-files-from-git-large-file-storage#removing-a-single-file\">git 大文件清理-github</a></li>\n<li><a href=\"http://gitlab.thunisoft.com/help/user/project/repository/reducing_the_repo_size_using_git.md\">git 大文件清理-gitlab</a>，目前不用上传 <code>object-id-map.old-new.txt</code> 文件，走 “开始清理” 这步骤</li>\n<li><a href=\"https://rtyley.github.io/bfg-repo-cleaner/\">git BFG</a></li>\n<li><a href=\"https://learngitbranching.js.org/?locale=zh_CN\">git 练习场</a></li>\n<li><a href=\"https://git-scm.com/book/zh/v2\">git 学习文档</a></li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://code-thinking-1253855093.file.myqcloud.com/pics/20211111115823.png","name":"程序员Carl","introduction":"认准代码随想录，学习算法不迷路","url":"https://www.programmercarl.com/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"cat-背景\"><a href=\"#cat-背景\" class=\"headerlink\" title=\":cat: 背景\"></a>:cat: 背景</h2><p><code>git clone</code> 项目耗时很长。原因，网速慢或是代码仓库文件很大(n+ G)。本篇文章就讲述如何给 <code>gitlab</code> 代码仓库减负。</p>\n<h3 id=\"dog-基础知识\"><a href=\"#dog-基础知识\" class=\"headerlink\" title=\":dog: 基础知识\"></a>:dog: 基础知识</h3><p>项目在 gitlab 中显示的仓库大小 = 项目文件总大小 + <code>.git</code> （隐藏）目录下文件大小。请认真关注你项目目录文件大小（windows 可以用 <a href=\"https://www.jam-software.com/treesize_free\">treesize free</a> / <a href=\"http://www.uderzo.it/main_products/space_sniffer/download_alt.html\">SpaceSniffer</a> 工具，linux 可以用命令 <code>du -h –max-depth=1 *</code>，mac 命令 <code>du -h -d 1 *</code> ），一般 <code>.git</code> 目录下文件大小 &gt;= 项目文件大小。意味着，项目整体下载空间占用 &gt;= 2 * 项目文件大小。所以，如果项目中包含比较大的文件，例如视频，高清照片等，把 gitlab 当做了<strong>共享备份存储空间</strong>是项目文件大的罪魁祸手。所以，项目初期代码一定和需求文档做剥离，除非你的项目足够的小。</p>\n<h3 id=\"fish-拯救-git-仓库\"><a href=\"#fish-拯救-git-仓库\" class=\"headerlink\" title=\":fish: 拯救 git 仓库\"></a>:fish: 拯救 git 仓库</h3><p>对于需求文档类项目而言，建议用 <code>git lfs</code> 做大文件管理（此处 <code>git lfs</code> 不做过多介绍，请点击<a href=\"https://git-lfs.github.com/\">链接</a>了解）。请多想想后面加入的需求人，给他们的加入减少一些绊脚石。</p>\n<blockquote>\n<p>:bulb: 仅使用几次，过一个月之后基本不翻的东西、无需版本管理、内容超过 100 MB 的视频，请慎重放入 git 仓库</p>\n</blockquote>\n<h3 id=\"whale-分析-git-大仓库\"><a href=\"#whale-分析-git-大仓库\" class=\"headerlink\" title=\":whale: 分析 git 大仓库\"></a>:whale: 分析 git 大仓库</h3><ul>\n<li><p>windows 上使用 <code>TreeSize Free</code>  看看文件大小占比分布。发现，项目本身文件大小大约 900 MB ，<code>.git</code> 目录吃掉 2.6 GB。原因，其实上面基础知识算是解答了一部分，感兴趣的同学可以参考附件<strong>git 原理</strong>找答案。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/directory_image.png\"></p>\n</li>\n<li><p>使用 <code>git verify-pack</code>  命令运行  <code>git verify-pack -v .git/objects/pack/pack-f0fa1a09cd9ebf8874e4ecafa9e56be7816097de.idx|sort -k 3 -n| tail -10</code> ，查找出文件大小在前 10 的文件 hash 标识。注意，windows 上请使用 <code>git Bash Here </code> 运行。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/git_xpack.png\"></p>\n</li>\n<li><p>使用命令 <code>git rev-list</code> 运行 <code>git rev-list --objects --all|grep  hashId </code> 定位大文件路径。此处，处理文件大小超过 100 MB。</p>\n<p><img src=\"/images/2023/gitlab_bigcodes/directory_file.png\"></p>\n</li>\n<li><p>按照路径和 <code>git log</code> 查找提交人，确定文件是否存在，且是否需要存在。确定需要清理的为 <code>xxxx.asf</code> 和 <code>xxx.asf</code> 两个文件。已经删除的文件，却在日志里能搜索出来，原因是防止你执行 <code>git revert</code> 还原到删除前的 commitId 版本。所以，清理原则就是需要<strong>明确</strong>哪些文件要删除，没有机会还原的话，就删除吧。</p>\n<blockquote>\n<p>:bulb: 有重命名/移动目录需求，请使用 <code>git mv</code>  命令，而达到目录变更及命名功能。不要使用 <code>git mv</code> 和 <code>git add</code> 的方式，完成文件重命名或移动目录。这样会造成有删除的用不到的记录。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"dolphin-如何清理\"><a href=\"#dolphin-如何清理\" class=\"headerlink\" title=\":dolphin: 如何清理\"></a>:dolphin: 如何清理</h2><blockquote>\n<p>在清理之前，建议所有人的分支都 push 到远端。否则，其他人的每次的 push 都会让你的清理都需要重新来一次。</p>\n</blockquote>\n<p>目前，主要有两种方法：</p>\n<ul>\n<li><p>git 原生支持的 <code>filter-branch</code> 分支文件，命令 <code>git filter-branch --force --tree-filter &#39;rm -f path/to/big_file.mpg&#39; HEAD</code> 。（不推荐。对于超多 commit 的项目，<code>filter-branch</code> 慢的怀疑人生，小编就是从 <code>git filter-branch</code> 放弃，转投 <code>BFG</code>）</p>\n</li>\n<li><p><code>BFG</code> 工具</p>\n<ul>\n<li><p>执行命令 <code>git clone --mirror git-repository-url</code>  clone git 仓库</p>\n</li>\n<li><p>执行命令 <code>java -jar bfg.jar --massive-non-file-objects-sized-up-to 100M --delete-files &#39;&#123;xxx.asf,xxx.asf&#125;&#39; thunisoft-mvd.git</code>。</p>\n<blockquote>\n<p><code>BFG</code> 对于需要清理的 history 会更改涉及文件的提交的 commit-id。具体老新 commit-id 的对应关系文件在 <code>thunisoft-mvd.git.bfg-report\\2020-07-17\\16-14-13\\object-id-map.old-new.txt</code> 中<br>此时，<code>.git/objects</code> 下的  <code>pack/xxxxx.pack</code>  文件会被解压为  n 个 <code>git objects</code> 对象文件</p>\n</blockquote>\n</li>\n</ul>\n<p>  <img src=\"/images/2023/gitlab_bigcodes/log_for_bfg.png\"></p>\n</li>\n<li><p>执行命令 <code>git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive</code> ，将 git object 对象压缩。而后，执行命令 <code>git push</code> 推送远端。</p>\n<blockquote>\n<p>注意：推送之前解除仓库的 <code>Protected Branches</code> 的配置</p>\n</blockquote>\n</li>\n</ul>\n<p>  <img src=\"/images/2023/gitlab_bigcodes/git_compress.png\"></p>\n<ul>\n<li>请项目组所有成员放弃原本的本地项目仓库，重新 clone git 项目。因为，如果用原来的仓库你会发现本地 <code>.git</code> 会更大，因为除了 <code>git gc</code> 重新生成的 <code>pack</code> 文件之外，还有本地本身老的 <code>pack</code> 文件。</li>\n</ul>\n<p><strong>最终和派生项目对比，除 <code>.git</code> 目录外其他相同。</strong></p>\n<p><img src=\"/images/2023/gitlab_bigcodes/gitcode_compare.png\"></p>\n<p><strong>为什么存在不到 1 KB 的文件？因为，本项目使用 <code>git lfs</code> 做了大文件管理，使用 <code>git lfs pull</code> 可以从远端拉下 1 KB 映射的原文件</strong><br><strong><font color=\"red\">清理完成，2.4 GB -&gt; 1.1 GB 的转身</font></strong></p>\n<h2 id=\"lion-特别说明\"><a href=\"#lion-特别说明\" class=\"headerlink\" title=\":lion: 特别说明\"></a>:lion: 特别说明</h2><ul>\n<li>项目使用 <code>git lfs</code> 管理大文件之后，使用 <code>BFG</code> 清理完对项目本身没有任何影响。照样，可以使用 <code>git lfs</code> 命令管理文件。</li>\n<li>真实项目在清理前，请先按照本文先 <code>clone</code> 出一份，熟悉一下清理流程，更有底气。</li>\n</ul>\n<h2 id=\"horse-附录\"><a href=\"#horse-附录\" class=\"headerlink\" title=\":horse: 附录\"></a>:horse: 附录</h2><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2018/10/git-internals.html\">git 原理-阮一峰</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/45510461\">git 原理</a></li>\n<li><a href=\"https://docs.github.com/cn/github/managing-large-files/removing-files-from-git-large-file-storage#removing-a-single-file\">git 大文件清理-github</a></li>\n<li><a href=\"http://gitlab.thunisoft.com/help/user/project/repository/reducing_the_repo_size_using_git.md\">git 大文件清理-gitlab</a>，目前不用上传 <code>object-id-map.old-new.txt</code> 文件，走 “开始清理” 这步骤</li>\n<li><a href=\"https://rtyley.github.io/bfg-repo-cleaner/\">git BFG</a></li>\n<li><a href=\"https://learngitbranching.js.org/?locale=zh_CN\">git 练习场</a></li>\n<li><a href=\"https://git-scm.com/book/zh/v2\">git 学习文档</a></li>\n</ul>\n"},{"title":"npm-link VUEX watch 怎么不生效","date":"2023-04-02T11:07:36.000Z","_content":"## :cat: 背景\n\n前端项目 package.json 相当于后端 maven 项目 pom.xml 文件管理项目组件依赖。需要走 `npm install --save-dev xxxx` 引入方式。\n对于项目中存在多项目共用的前端组件开发，不希望每次修改以发布版本再 `npm install` 下载包调试。\n可以选用 [npm-link 方式](https://docs.npmjs.com/cli/v9/commands/npm-link/) 将前端组件 link 到场景 UI 中完成开发/联调/bug 修改工作。\n最近前端同学发现，npm-link 方式引入的前端组件中引入 VUEX，且对 store 属性 watch 事件是不会生效。\n个人觉得不应该，npm-link 就简单的将前端组件 link 到 UI，可以说是**原封**不动，包括 `node_modules`（最后发现也坏在此处）。\n搜索 google 和百度都没有有效的帖子。\n\n## :tiger: 问题跟进\n\n### :one: 搞懂 VUEX store 的 watch 原理\n\n**store watch 的初始化**\n\n`vue` 初始化时，会调用 `initState` 其中，会针对本 `vue` 的 watch 完成 `initWatch` 初始化。其中初始化过程中会调用 `Vue.prototype.$watch` (注意，此处初始化用到的还是 vue 原型方法 $watch) 其中会触发一次 `watch handler` 方法。\n\n```javascript\nVue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n```\n\n在 `new Watcher` 对象第一次获取 `watcher.value` 时，触发 `watcher` 对象的 Dep 依赖。\n\n```javascript\nvar Watcher = function Watcher (vm,  expOrFn,  cb,  options,  isRenderWatcher) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // 隐藏不需要关注的代码\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n    // 隐藏不需要关注的代码\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\nWatcher.prototype.get = function get () {\n  // 指定 Dep.target 为 watcher\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    if (this.deep) {\n      traverse(value);\n    }\n    // 退出 Dep.target 的指向  \n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n// 触发真实 get 时，完成了 watcher 的 Dep 依赖\nObject.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    // 忽略 set\n    get: function reactiveGetter () {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n            dep.depend();\n            if (childOb) {\n                childOb.dep.depend();\n                if (Array.isArray(value)) {\n                    dependArray(value);\n                }\n            }\n        }\n        return value\n\t}\n}\n// 完成 Dep.target 添加依赖，此时的 Dep.target 是 watther 本身。而 this 为 store 的 dep 对象。\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n// watcher 完成 addDep时，除了给自身 depId和 deps 加上 store dep对象，同样把自身watcher作为 store dep 的子关联\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n```\n\n`Dep.prototype.depend` 完成调用时，store watcher 已经完成与 store 的 dep 对象的绑定过程。以上 `store watch init` 的链路如下，\n\n```\ndepend (vue.common.dev.js:726)\nreactiveGetter (vue.common.dev.js:1038)\nprototypeAccessors$1.state.get (vuex.esm.js:438)\n（匿名） (vue.common.dev.js:514)\nget (vue.common.dev.js:4490)\nWatcher (vue.common.dev.js:4479)\nVue.$watch (vue.common.dev.js:4953)\ncreateWatcher (vue.common.dev.js:4913)\ninitWatch (vue.common.dev.js:4895)\ninitState (vue.common.dev.js:4656)\nVue._init (vue.common.dev.js:5010)\nVueComponent (vue.common.dev.js:5157)\ncreateComponentInstanceForVnode (vue.common.dev.js:3307)\ninit (vue.common.dev.js:3136)\n```\n\n**store watch 的触发**\n\n`this.$store.commit('xxx', xxxx)` 触发时，在改值的同事会触发本 store Dep 的 notify （通知）。\n\n```javascript\nObject.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    // 忽略 get\n    set: function reactiveSetter (newVal) {\n        var value = getter ? getter.call(obj) : val;\n        /* eslint-disable no-self-compare */\n        if (newVal === value || (newVal !== newVal && value !== value)) {\n            return\n        }\n        /* eslint-enable no-self-compare */\n        if (customSetter) {\n            customSetter();\n        }\n        // #7981: for accessor properties without setter\n        if (getter && !setter) { return }\n        if (setter) {\n            setter.call(obj, newVal);\n        } else {\n            val = newVal;\n        }\n        childOb = !shallow && observe(newVal);\n        // 触发通知\n        dep.notify();\n    }\n});\nDep.prototype.notify = function notify () {\n  var subs = this.subs.slice();\n // 忽略不重要代码\n  for (var i = 0, l = subs.length; i < l; i++) {\n    // watcher update\n    subs[i].update();\n  }\n};\n```\n\n其中 `notify` 的中遍历 Dep 的 subs 并更新，此处回想 watcher 初始化时 `watcher#addDep` 可见 subs 是包含 watcher 的，所以 store 属性变化也就能通知到 watcher 了。`store watch notify` 的链路如下，\n\n```\nhandler (list_left.vue:411)\ninvokeWithErrorHandling (vue.common.dev.js:1868)\nrun (vue.common.dev.js:4579)\nflushSchedulerQueue (vue.common.dev.js:4323)\n（匿名） (vue.common.dev.js:1994)\nflushCallbacks (vue.common.dev.js:1920)\nPromise.then（异步）\ntimerFunc (vue.common.dev.js:1947)\nnextTick (vue.common.dev.js:2004)\nqueueWatcher (vue.common.dev.js:4415)\nupdate (vue.common.dev.js:4555)\nnotify (vue.common.dev.js:741)\nreactiveSetter (vue.common.dev.js:1066)\nproxySetter (vue.common.dev.js:4639)\nchangeAjlb (nav.vue:431)\n```\n\n以上，**watcher init** 和 **watcher 触发** 总结来说就是这个图。\n\n![](images/2023/npm_link_vuex_watch/link.png)\n\n### :two: 为啥 npm-link 不能触发 store watch\n\n搞懂了，store watcher 这摊子事情，排查就相对简单了。**抓住 1 个位置即可，在 `initWatcher` 的时候是否完成了 `Watcher#addDep`。\n** 结果发现，在 `Watcher.prototype.get`方法中 `pushTarget(this)`  Dep 指向 `webpack://${web_app}/./node_nodules/vue/dist/vue,common.dev.js`。\n而在 `Object.defineProperty#get` 方法中 `Dep.target` 代码 Dep 指向\n`webpack://${web_app}/${web_component}/node_modules/vue/dist/vue.common.dev.js`。 \n摆明 Dep 已经不是原来的 Dep 了，导致 store Dep 与 watcher 没加成，导致 store watcher 不被触发。\n\n**此时，我回想幸好是个女生，不然我就去楼下抽根烟了。这个后端 jar 包冲突可太像了。**\n\n### :three: 如何解决问题\n\n在场景层将 vue 定义成 window 全局对象。在组件内使用 `window.Vue` 装载  vuex。自此，问题终结。修改方式：\n\n```javascript\n// 在前端应用入口文件中\nimport vue from 'vue';\nimport vuex from 'vuex';\nwindow.Vue = vue;\nvue.use(vuex);\n// 在被引用的组件入口文件中\nimport vuex from 'vuex';\nif (window.Vue) {\n    window.Vue.use(vuex);\n} else {\n    window.use(vuex);\n}\n```\n\n## :rabbit: 总结\n\n1. npm-link 固然解决了不用老改组件版本号调试的问题，但因为 npm-link 的组件会使用自身的 node_modules 导致，部分原本期望与场景 ui 共享的对象可能不共享。\n2. 前端代码排查确是不如后端代码排查方便，啥 `console.warn` 都么得耗时长。\n\n## :sheep: 附件\n- [Vue源码解读之Dep,Observer和Watcher](https://segmentfault.com/a/1190000016208088)\n","source":"_posts/npm-link-VUEX-watch-怎么不生效.md","raw":"---\ntitle: npm-link VUEX watch 怎么不生效\ndate: 2023-04-02 19:07:36\ncategories:\n- npm \ntags:\n- tools\n- npm-link\n---\n## :cat: 背景\n\n前端项目 package.json 相当于后端 maven 项目 pom.xml 文件管理项目组件依赖。需要走 `npm install --save-dev xxxx` 引入方式。\n对于项目中存在多项目共用的前端组件开发，不希望每次修改以发布版本再 `npm install` 下载包调试。\n可以选用 [npm-link 方式](https://docs.npmjs.com/cli/v9/commands/npm-link/) 将前端组件 link 到场景 UI 中完成开发/联调/bug 修改工作。\n最近前端同学发现，npm-link 方式引入的前端组件中引入 VUEX，且对 store 属性 watch 事件是不会生效。\n个人觉得不应该，npm-link 就简单的将前端组件 link 到 UI，可以说是**原封**不动，包括 `node_modules`（最后发现也坏在此处）。\n搜索 google 和百度都没有有效的帖子。\n\n## :tiger: 问题跟进\n\n### :one: 搞懂 VUEX store 的 watch 原理\n\n**store watch 的初始化**\n\n`vue` 初始化时，会调用 `initState` 其中，会针对本 `vue` 的 watch 完成 `initWatch` 初始化。其中初始化过程中会调用 `Vue.prototype.$watch` (注意，此处初始化用到的还是 vue 原型方法 $watch) 其中会触发一次 `watch handler` 方法。\n\n```javascript\nVue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n```\n\n在 `new Watcher` 对象第一次获取 `watcher.value` 时，触发 `watcher` 对象的 Dep 依赖。\n\n```javascript\nvar Watcher = function Watcher (vm,  expOrFn,  cb,  options,  isRenderWatcher) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // 隐藏不需要关注的代码\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n    // 隐藏不需要关注的代码\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\nWatcher.prototype.get = function get () {\n  // 指定 Dep.target 为 watcher\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    if (this.deep) {\n      traverse(value);\n    }\n    // 退出 Dep.target 的指向  \n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n// 触发真实 get 时，完成了 watcher 的 Dep 依赖\nObject.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    // 忽略 set\n    get: function reactiveGetter () {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n            dep.depend();\n            if (childOb) {\n                childOb.dep.depend();\n                if (Array.isArray(value)) {\n                    dependArray(value);\n                }\n            }\n        }\n        return value\n\t}\n}\n// 完成 Dep.target 添加依赖，此时的 Dep.target 是 watther 本身。而 this 为 store 的 dep 对象。\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n// watcher 完成 addDep时，除了给自身 depId和 deps 加上 store dep对象，同样把自身watcher作为 store dep 的子关联\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n```\n\n`Dep.prototype.depend` 完成调用时，store watcher 已经完成与 store 的 dep 对象的绑定过程。以上 `store watch init` 的链路如下，\n\n```\ndepend (vue.common.dev.js:726)\nreactiveGetter (vue.common.dev.js:1038)\nprototypeAccessors$1.state.get (vuex.esm.js:438)\n（匿名） (vue.common.dev.js:514)\nget (vue.common.dev.js:4490)\nWatcher (vue.common.dev.js:4479)\nVue.$watch (vue.common.dev.js:4953)\ncreateWatcher (vue.common.dev.js:4913)\ninitWatch (vue.common.dev.js:4895)\ninitState (vue.common.dev.js:4656)\nVue._init (vue.common.dev.js:5010)\nVueComponent (vue.common.dev.js:5157)\ncreateComponentInstanceForVnode (vue.common.dev.js:3307)\ninit (vue.common.dev.js:3136)\n```\n\n**store watch 的触发**\n\n`this.$store.commit('xxx', xxxx)` 触发时，在改值的同事会触发本 store Dep 的 notify （通知）。\n\n```javascript\nObject.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    // 忽略 get\n    set: function reactiveSetter (newVal) {\n        var value = getter ? getter.call(obj) : val;\n        /* eslint-disable no-self-compare */\n        if (newVal === value || (newVal !== newVal && value !== value)) {\n            return\n        }\n        /* eslint-enable no-self-compare */\n        if (customSetter) {\n            customSetter();\n        }\n        // #7981: for accessor properties without setter\n        if (getter && !setter) { return }\n        if (setter) {\n            setter.call(obj, newVal);\n        } else {\n            val = newVal;\n        }\n        childOb = !shallow && observe(newVal);\n        // 触发通知\n        dep.notify();\n    }\n});\nDep.prototype.notify = function notify () {\n  var subs = this.subs.slice();\n // 忽略不重要代码\n  for (var i = 0, l = subs.length; i < l; i++) {\n    // watcher update\n    subs[i].update();\n  }\n};\n```\n\n其中 `notify` 的中遍历 Dep 的 subs 并更新，此处回想 watcher 初始化时 `watcher#addDep` 可见 subs 是包含 watcher 的，所以 store 属性变化也就能通知到 watcher 了。`store watch notify` 的链路如下，\n\n```\nhandler (list_left.vue:411)\ninvokeWithErrorHandling (vue.common.dev.js:1868)\nrun (vue.common.dev.js:4579)\nflushSchedulerQueue (vue.common.dev.js:4323)\n（匿名） (vue.common.dev.js:1994)\nflushCallbacks (vue.common.dev.js:1920)\nPromise.then（异步）\ntimerFunc (vue.common.dev.js:1947)\nnextTick (vue.common.dev.js:2004)\nqueueWatcher (vue.common.dev.js:4415)\nupdate (vue.common.dev.js:4555)\nnotify (vue.common.dev.js:741)\nreactiveSetter (vue.common.dev.js:1066)\nproxySetter (vue.common.dev.js:4639)\nchangeAjlb (nav.vue:431)\n```\n\n以上，**watcher init** 和 **watcher 触发** 总结来说就是这个图。\n\n![](images/2023/npm_link_vuex_watch/link.png)\n\n### :two: 为啥 npm-link 不能触发 store watch\n\n搞懂了，store watcher 这摊子事情，排查就相对简单了。**抓住 1 个位置即可，在 `initWatcher` 的时候是否完成了 `Watcher#addDep`。\n** 结果发现，在 `Watcher.prototype.get`方法中 `pushTarget(this)`  Dep 指向 `webpack://${web_app}/./node_nodules/vue/dist/vue,common.dev.js`。\n而在 `Object.defineProperty#get` 方法中 `Dep.target` 代码 Dep 指向\n`webpack://${web_app}/${web_component}/node_modules/vue/dist/vue.common.dev.js`。 \n摆明 Dep 已经不是原来的 Dep 了，导致 store Dep 与 watcher 没加成，导致 store watcher 不被触发。\n\n**此时，我回想幸好是个女生，不然我就去楼下抽根烟了。这个后端 jar 包冲突可太像了。**\n\n### :three: 如何解决问题\n\n在场景层将 vue 定义成 window 全局对象。在组件内使用 `window.Vue` 装载  vuex。自此，问题终结。修改方式：\n\n```javascript\n// 在前端应用入口文件中\nimport vue from 'vue';\nimport vuex from 'vuex';\nwindow.Vue = vue;\nvue.use(vuex);\n// 在被引用的组件入口文件中\nimport vuex from 'vuex';\nif (window.Vue) {\n    window.Vue.use(vuex);\n} else {\n    window.use(vuex);\n}\n```\n\n## :rabbit: 总结\n\n1. npm-link 固然解决了不用老改组件版本号调试的问题，但因为 npm-link 的组件会使用自身的 node_modules 导致，部分原本期望与场景 ui 共享的对象可能不共享。\n2. 前端代码排查确是不如后端代码排查方便，啥 `console.warn` 都么得耗时长。\n\n## :sheep: 附件\n- [Vue源码解读之Dep,Observer和Watcher](https://segmentfault.com/a/1190000016208088)\n","slug":"npm-link-VUEX-watch-怎么不生效","published":1,"updated":"2023-04-02T11:31:02.213Z","_id":"clfzbkh8y0000jn66bdl53b4s","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"cat-背景\"><a href=\"#cat-背景\" class=\"headerlink\" title=\":cat: 背景\"></a><span class=\"github-emoji\"><span>🐱</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 背景</h2><p>前端项目 package.json 相当于后端 maven 项目 pom.xml 文件管理项目组件依赖。需要走 <code>npm install --save-dev xxxx</code> 引入方式。<br>对于项目中存在多项目共用的前端组件开发，不希望每次修改以发布版本再 <code>npm install</code> 下载包调试。<br>可以选用 <a href=\"https://docs.npmjs.com/cli/v9/commands/npm-link/\">npm-link 方式</a> 将前端组件 link 到场景 UI 中完成开发/联调/bug 修改工作。<br>最近前端同学发现，npm-link 方式引入的前端组件中引入 VUEX，且对 store 属性 watch 事件是不会生效。<br>个人觉得不应该，npm-link 就简单的将前端组件 link 到 UI，可以说是<strong>原封</strong>不动，包括 <code>node_modules</code>（最后发现也坏在此处）。<br>搜索 google 和百度都没有有效的帖子。</p>\n<h2 id=\"tiger-问题跟进\"><a href=\"#tiger-问题跟进\" class=\"headerlink\" title=\":tiger: 问题跟进\"></a><span class=\"github-emoji\"><span>🐯</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f42f.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 问题跟进</h2><h3 id=\"one-搞懂-VUEX-store-的-watch-原理\"><a href=\"#one-搞懂-VUEX-store-的-watch-原理\" class=\"headerlink\" title=\":one: 搞懂 VUEX store 的 watch 原理\"></a><span class=\"github-emoji\"><span>1⃣</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 搞懂 VUEX store 的 watch 原理</h3><p><strong>store watch 的初始化</strong></p>\n<p><code>vue</code> 初始化时，会调用 <code>initState</code> 其中，会针对本 <code>vue</code> 的 watch 完成 <code>initWatch</code> 初始化。其中初始化过程中会调用 <code>Vue.prototype.$watch</code> (注意，此处初始化用到的还是 vue 原型方法 $watch) 其中会触发一次 <code>watch handler</code> 方法。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$watch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">createWatcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    options <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    options<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> watcher <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>immediate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> <span class=\"token string\">\"callback for immediate watcher \\\"\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>watcher<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">pushTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">invokeWithErrorHandling</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>watcher<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">popTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">unwatchFn</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      watcher<span class=\"token punctuation\">.</span><span class=\"token function\">teardown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 <code>new Watcher</code> 对象第一次获取 <code>watcher.value</code> 时，触发 <code>watcher</code> 对象的 Dep 依赖。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Watcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Watcher</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vm<span class=\"token punctuation\">,</span>  expOrFn<span class=\"token punctuation\">,</span>  cb<span class=\"token punctuation\">,</span>  options<span class=\"token punctuation\">,</span>  isRenderWatcher</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRenderWatcher<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vm<span class=\"token punctuation\">.</span>_watcher <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  vm<span class=\"token punctuation\">.</span>_watchers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 隐藏不需要关注的代码</span>\n  <span class=\"token comment\">// parse expression for getter</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> expOrFn <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> expOrFn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> <span class=\"token function\">parsePath</span><span class=\"token punctuation\">(</span>expOrFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> noop<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 隐藏不需要关注的代码</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lazy\n    <span class=\"token operator\">?</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 指定 Dep.target 为 watcher</span>\n  <span class=\"token function\">pushTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"getter for watcher \\\"\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> e\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>deep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 退出 Dep.target 的指向  </span>\n    <span class=\"token function\">popTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">cleanupDeps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> value\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 触发真实 get 时，完成了 watcher 的 Dep 依赖</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 忽略 set</span>\n    <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">reactiveGetter</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> getter <span class=\"token operator\">?</span> <span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            dep<span class=\"token punctuation\">.</span><span class=\"token function\">depend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childOb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                childOb<span class=\"token punctuation\">.</span>dep<span class=\"token punctuation\">.</span><span class=\"token function\">depend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">dependArray</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> value\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 完成 Dep.target 添加依赖，此时的 Dep.target 是 watther 本身。而 this 为 store 的 dep 对象。</span>\n<span class=\"token class-name\">Dep</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">depend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">depend</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">addDep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// watcher 完成 addDep时，除了给自身 depId和 deps 加上 store dep对象，同样把自身watcher作为 store dep 的子关联</span>\n<span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addDep</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addDep</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dep</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> dep<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDepIds<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDepIds<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDeps<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>depIds<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      dep<span class=\"token punctuation\">.</span><span class=\"token function\">addSub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>Dep.prototype.depend</code> 完成调用时，store watcher 已经完成与 store 的 dep 对象的绑定过程。以上 <code>store watch init</code> 的链路如下，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">depend (vue.common.dev.js:726)\nreactiveGetter (vue.common.dev.js:1038)\nprototypeAccessors$1.state.get (vuex.esm.js:438)\n（匿名） (vue.common.dev.js:514)\nget (vue.common.dev.js:4490)\nWatcher (vue.common.dev.js:4479)\nVue.$watch (vue.common.dev.js:4953)\ncreateWatcher (vue.common.dev.js:4913)\ninitWatch (vue.common.dev.js:4895)\ninitState (vue.common.dev.js:4656)\nVue._init (vue.common.dev.js:5010)\nVueComponent (vue.common.dev.js:5157)\ncreateComponentInstanceForVnode (vue.common.dev.js:3307)\ninit (vue.common.dev.js:3136)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>store watch 的触发</strong></p>\n<p><code>this.$store.commit('xxx', xxxx)</code> 触发时，在改值的同事会触发本 store Dep 的 notify （通知）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 忽略 get</span>\n    <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">reactiveSetter</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> getter <span class=\"token operator\">?</span> <span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* eslint-disable no-self-compare */</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">===</span> value <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">!==</span> newVal <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">!==</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/* eslint-enable no-self-compare */</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>customSetter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">customSetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// #7981: for accessor properties without setter</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getter <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>setter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>setter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            val <span class=\"token operator\">=</span> newVal<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        childOb <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>shallow <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 触发通知</span>\n        dep<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Dep</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notify</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">notify</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> subs <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// 忽略不重要代码</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> subs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// watcher update</span>\n    subs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中 <code>notify</code> 的中遍历 Dep 的 subs 并更新，此处回想 watcher 初始化时 <code>watcher#addDep</code> 可见 subs 是包含 watcher 的，所以 store 属性变化也就能通知到 watcher 了。<code>store watch notify</code> 的链路如下，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">handler (list_left.vue:411)\ninvokeWithErrorHandling (vue.common.dev.js:1868)\nrun (vue.common.dev.js:4579)\nflushSchedulerQueue (vue.common.dev.js:4323)\n（匿名） (vue.common.dev.js:1994)\nflushCallbacks (vue.common.dev.js:1920)\nPromise.then（异步）\ntimerFunc (vue.common.dev.js:1947)\nnextTick (vue.common.dev.js:2004)\nqueueWatcher (vue.common.dev.js:4415)\nupdate (vue.common.dev.js:4555)\nnotify (vue.common.dev.js:741)\nreactiveSetter (vue.common.dev.js:1066)\nproxySetter (vue.common.dev.js:4639)\nchangeAjlb (nav.vue:431)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以上，<strong>watcher init</strong> 和 <strong>watcher 触发</strong> 总结来说就是这个图。</p>\n<p><img src=\"/images/2023/npm_link_vuex_watch/link.png\"></p>\n<h3 id=\"two-为啥-npm-link-不能触发-store-watch\"><a href=\"#two-为啥-npm-link-不能触发-store-watch\" class=\"headerlink\" title=\":two: 为啥 npm-link 不能触发 store watch\"></a><span class=\"github-emoji\"><span>2⃣</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 为啥 npm-link 不能触发 store watch</h3><p>搞懂了，store watcher 这摊子事情，排查就相对简单了。**抓住 1 个位置即可，在 <code>initWatcher</code> 的时候是否完成了 <code>Watcher#addDep</code>。<br>** 结果发现，在 <code>Watcher.prototype.get</code>方法中 <code>pushTarget(this)</code>  Dep 指向 <code>webpack://${web_app}/./node_nodules/vue/dist/vue,common.dev.js</code>。<br>而在 <code>Object.defineProperty#get</code> 方法中 <code>Dep.target</code> 代码 Dep 指向<br><code>webpack://${web_app}/${web_component}/node_modules/vue/dist/vue.common.dev.js</code>。<br>摆明 Dep 已经不是原来的 Dep 了，导致 store Dep 与 watcher 没加成，导致 store watcher 不被触发。</p>\n<p><strong>此时，我回想幸好是个女生，不然我就去楼下抽根烟了。这个后端 jar 包冲突可太像了。</strong></p>\n<h3 id=\"three-如何解决问题\"><a href=\"#three-如何解决问题\" class=\"headerlink\" title=\":three: 如何解决问题\"></a><span class=\"github-emoji\"><span>3⃣</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 如何解决问题</h3><p>在场景层将 vue 定义成 window 全局对象。在组件内使用 <code>window.Vue</code> 装载  vuex。自此，问题终结。修改方式：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 在前端应用入口文件中</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>Vue <span class=\"token operator\">=</span> vue<span class=\"token punctuation\">;</span>\nvue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 在被引用的组件入口文件中</span>\n<span class=\"token keyword\">import</span> vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"rabbit-总结\"><a href=\"#rabbit-总结\" class=\"headerlink\" title=\":rabbit: 总结\"></a><span class=\"github-emoji\"><span>🐰</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f430.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 总结</h2><ol>\n<li>npm-link 固然解决了不用老改组件版本号调试的问题，但因为 npm-link 的组件会使用自身的 node_modules 导致，部分原本期望与场景 ui 共享的对象可能不共享。</li>\n<li>前端代码排查确是不如后端代码排查方便，啥 <code>console.warn</code> 都么得耗时长。</li>\n</ol>\n<h2 id=\"sheep-附件\"><a href=\"#sheep-附件\" class=\"headerlink\" title=\":sheep: 附件\"></a><span class=\"github-emoji\"><span>🐑</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f411.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span> 附件</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000016208088\">Vue源码解读之Dep,Observer和Watcher</a></li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"https://code-thinking-1253855093.file.myqcloud.com/pics/20211111115823.png","name":"程序员Carl","introduction":"认准代码随想录，学习算法不迷路","url":"https://www.programmercarl.com/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"cat-背景\"><a href=\"#cat-背景\" class=\"headerlink\" title=\":cat: 背景\"></a>:cat: 背景</h2><p>前端项目 package.json 相当于后端 maven 项目 pom.xml 文件管理项目组件依赖。需要走 <code>npm install --save-dev xxxx</code> 引入方式。<br>对于项目中存在多项目共用的前端组件开发，不希望每次修改以发布版本再 <code>npm install</code> 下载包调试。<br>可以选用 <a href=\"https://docs.npmjs.com/cli/v9/commands/npm-link/\">npm-link 方式</a> 将前端组件 link 到场景 UI 中完成开发/联调/bug 修改工作。<br>最近前端同学发现，npm-link 方式引入的前端组件中引入 VUEX，且对 store 属性 watch 事件是不会生效。<br>个人觉得不应该，npm-link 就简单的将前端组件 link 到 UI，可以说是<strong>原封</strong>不动，包括 <code>node_modules</code>（最后发现也坏在此处）。<br>搜索 google 和百度都没有有效的帖子。</p>\n<h2 id=\"tiger-问题跟进\"><a href=\"#tiger-问题跟进\" class=\"headerlink\" title=\":tiger: 问题跟进\"></a>:tiger: 问题跟进</h2><h3 id=\"one-搞懂-VUEX-store-的-watch-原理\"><a href=\"#one-搞懂-VUEX-store-的-watch-原理\" class=\"headerlink\" title=\":one: 搞懂 VUEX store 的 watch 原理\"></a>:one: 搞懂 VUEX store 的 watch 原理</h3><p><strong>store watch 的初始化</strong></p>\n<p><code>vue</code> 初始化时，会调用 <code>initState</code> 其中，会针对本 <code>vue</code> 的 watch 完成 <code>initWatch</code> 初始化。其中初始化过程中会调用 <code>Vue.prototype.$watch</code> (注意，此处初始化用到的还是 vue 原型方法 $watch) 其中会触发一次 <code>watch handler</code> 方法。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$watch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">createWatcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    options <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    options<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> watcher <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> expOrFn<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>immediate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> <span class=\"token string\">\"callback for immediate watcher \\\"\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>watcher<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">pushTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">invokeWithErrorHandling</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>watcher<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">popTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">unwatchFn</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      watcher<span class=\"token punctuation\">.</span><span class=\"token function\">teardown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在 <code>new Watcher</code> 对象第一次获取 <code>watcher.value</code> 时，触发 <code>watcher</code> 对象的 Dep 依赖。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Watcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Watcher</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vm<span class=\"token punctuation\">,</span>  expOrFn<span class=\"token punctuation\">,</span>  cb<span class=\"token punctuation\">,</span>  options<span class=\"token punctuation\">,</span>  isRenderWatcher</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRenderWatcher<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    vm<span class=\"token punctuation\">.</span>_watcher <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  vm<span class=\"token punctuation\">.</span>_watchers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 隐藏不需要关注的代码</span>\n  <span class=\"token comment\">// parse expression for getter</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> expOrFn <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> expOrFn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> <span class=\"token function\">parsePath</span><span class=\"token punctuation\">(</span>expOrFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>getter <span class=\"token operator\">=</span> noop<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 隐藏不需要关注的代码</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lazy\n    <span class=\"token operator\">?</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 指定 Dep.target 为 watcher</span>\n  <span class=\"token function\">pushTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"getter for watcher \\\"\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> e\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>deep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 退出 Dep.target 的指向  </span>\n    <span class=\"token function\">popTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">cleanupDeps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> value\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 触发真实 get 时，完成了 watcher 的 Dep 依赖</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 忽略 set</span>\n    <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">reactiveGetter</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> getter <span class=\"token operator\">?</span> <span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            dep<span class=\"token punctuation\">.</span><span class=\"token function\">depend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childOb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                childOb<span class=\"token punctuation\">.</span>dep<span class=\"token punctuation\">.</span><span class=\"token function\">depend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token function\">dependArray</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> value\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 完成 Dep.target 添加依赖，此时的 Dep.target 是 watther 本身。而 this 为 store 的 dep 对象。</span>\n<span class=\"token class-name\">Dep</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">depend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">depend</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    Dep<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">addDep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// watcher 完成 addDep时，除了给自身 depId和 deps 加上 store dep对象，同样把自身watcher作为 store dep 的子关联</span>\n<span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addDep</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addDep</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dep</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> dep<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDepIds<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDepIds<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>newDeps<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>depIds<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      dep<span class=\"token punctuation\">.</span><span class=\"token function\">addSub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>Dep.prototype.depend</code> 完成调用时，store watcher 已经完成与 store 的 dep 对象的绑定过程。以上 <code>store watch init</code> 的链路如下，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">depend (vue.common.dev.js:726)\nreactiveGetter (vue.common.dev.js:1038)\nprototypeAccessors$1.state.get (vuex.esm.js:438)\n（匿名） (vue.common.dev.js:514)\nget (vue.common.dev.js:4490)\nWatcher (vue.common.dev.js:4479)\nVue.$watch (vue.common.dev.js:4953)\ncreateWatcher (vue.common.dev.js:4913)\ninitWatch (vue.common.dev.js:4895)\ninitState (vue.common.dev.js:4656)\nVue._init (vue.common.dev.js:5010)\nVueComponent (vue.common.dev.js:5157)\ncreateComponentInstanceForVnode (vue.common.dev.js:3307)\ninit (vue.common.dev.js:3136)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>store watch 的触发</strong></p>\n<p><code>this.$store.commit(&#39;xxx&#39;, xxxx)</code> 触发时，在改值的同事会触发本 store Dep 的 notify （通知）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 忽略 get</span>\n    <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">reactiveSetter</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> getter <span class=\"token operator\">?</span> <span class=\"token function\">getter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* eslint-disable no-self-compare */</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">===</span> value <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">!==</span> newVal <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">!==</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">/* eslint-enable no-self-compare */</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>customSetter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">customSetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// #7981: for accessor properties without setter</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getter <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>setter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>setter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">setter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            val <span class=\"token operator\">=</span> newVal<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        childOb <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>shallow <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 触发通知</span>\n        dep<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Dep</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notify</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">notify</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> subs <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// 忽略不重要代码</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> subs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// watcher update</span>\n    subs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中 <code>notify</code> 的中遍历 Dep 的 subs 并更新，此处回想 watcher 初始化时 <code>watcher#addDep</code> 可见 subs 是包含 watcher 的，所以 store 属性变化也就能通知到 watcher 了。<code>store watch notify</code> 的链路如下，</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">handler (list_left.vue:411)\ninvokeWithErrorHandling (vue.common.dev.js:1868)\nrun (vue.common.dev.js:4579)\nflushSchedulerQueue (vue.common.dev.js:4323)\n（匿名） (vue.common.dev.js:1994)\nflushCallbacks (vue.common.dev.js:1920)\nPromise.then（异步）\ntimerFunc (vue.common.dev.js:1947)\nnextTick (vue.common.dev.js:2004)\nqueueWatcher (vue.common.dev.js:4415)\nupdate (vue.common.dev.js:4555)\nnotify (vue.common.dev.js:741)\nreactiveSetter (vue.common.dev.js:1066)\nproxySetter (vue.common.dev.js:4639)\nchangeAjlb (nav.vue:431)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以上，<strong>watcher init</strong> 和 <strong>watcher 触发</strong> 总结来说就是这个图。</p>\n<p><img src=\"/images/2023/npm_link_vuex_watch/link.png\"></p>\n<h3 id=\"two-为啥-npm-link-不能触发-store-watch\"><a href=\"#two-为啥-npm-link-不能触发-store-watch\" class=\"headerlink\" title=\":two: 为啥 npm-link 不能触发 store watch\"></a>:two: 为啥 npm-link 不能触发 store watch</h3><p>搞懂了，store watcher 这摊子事情，排查就相对简单了。**抓住 1 个位置即可，在 <code>initWatcher</code> 的时候是否完成了 <code>Watcher#addDep</code>。<br>** 结果发现，在 <code>Watcher.prototype.get</code>方法中 <code>pushTarget(this)</code>  Dep 指向 <code>webpack://$&#123;web_app&#125;/./node_nodules/vue/dist/vue,common.dev.js</code>。<br>而在 <code>Object.defineProperty#get</code> 方法中 <code>Dep.target</code> 代码 Dep 指向<br><code>webpack://$&#123;web_app&#125;/$&#123;web_component&#125;/node_modules/vue/dist/vue.common.dev.js</code>。<br>摆明 Dep 已经不是原来的 Dep 了，导致 store Dep 与 watcher 没加成，导致 store watcher 不被触发。</p>\n<p><strong>此时，我回想幸好是个女生，不然我就去楼下抽根烟了。这个后端 jar 包冲突可太像了。</strong></p>\n<h3 id=\"three-如何解决问题\"><a href=\"#three-如何解决问题\" class=\"headerlink\" title=\":three: 如何解决问题\"></a>:three: 如何解决问题</h3><p>在场景层将 vue 定义成 window 全局对象。在组件内使用 <code>window.Vue</code> 装载  vuex。自此，问题终结。修改方式：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 在前端应用入口文件中</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>Vue <span class=\"token operator\">=</span> vue<span class=\"token punctuation\">;</span>\nvue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 在被引用的组件入口文件中</span>\n<span class=\"token keyword\">import</span> vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"rabbit-总结\"><a href=\"#rabbit-总结\" class=\"headerlink\" title=\":rabbit: 总结\"></a>:rabbit: 总结</h2><ol>\n<li>npm-link 固然解决了不用老改组件版本号调试的问题，但因为 npm-link 的组件会使用自身的 node_modules 导致，部分原本期望与场景 ui 共享的对象可能不共享。</li>\n<li>前端代码排查确是不如后端代码排查方便，啥 <code>console.warn</code> 都么得耗时长。</li>\n</ol>\n<h2 id=\"sheep-附件\"><a href=\"#sheep-附件\" class=\"headerlink\" title=\":sheep: 附件\"></a>:sheep: 附件</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000016208088\">Vue源码解读之Dep,Observer和Watcher</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clfzan0gs0000hv66745a8rfv","category_id":"clfsi5qcx0003g9660tk982mp","_id":"clfzan0gw0003hv667xwhh8dn"},{"post_id":"clfzbkh8y0000jn66bdl53b4s","category_id":"clfzbkh910001jn669p08ds62","_id":"clfzbkh920005jn66hw924594"}],"PostTag":[{"post_id":"clfzan0gs0000hv66745a8rfv","tag_id":"clfsi5qcy0004g9669kei3tzc","_id":"clfzan0gw0001hv661kixe80w"},{"post_id":"clfzan0gs0000hv66745a8rfv","tag_id":"clfsi5qcz0008g966gkzsdw6d","_id":"clfzan0gw0002hv668pzecarx"},{"post_id":"clfzan0gs0000hv66745a8rfv","tag_id":"clfsi5qcz000bg966dyoj168s","_id":"clfzan0gw0004hv665unbeu78"},{"post_id":"clfzbkh8y0000jn66bdl53b4s","tag_id":"clfsi5qcy0004g9669kei3tzc","_id":"clfzbkh920003jn6665u4htng"},{"post_id":"clfzbkh8y0000jn66bdl53b4s","tag_id":"clfzbkh910002jn664re9foaz","_id":"clfzbkh920004jn66dnl6ge48"}],"Tag":[{"name":"tools","_id":"clfsi5qcy0004g9669kei3tzc"},{"name":"gitlab","_id":"clfsi5qcz0008g966gkzsdw6d"},{"name":"BFG","_id":"clfsi5qcz000bg966dyoj168s"},{"name":"npm-link","_id":"clfzbkh910002jn664re9foaz"}]}}